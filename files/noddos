#!/bin/sh /etc/rc.common

START=90
STOP=20

USE_PROCD=1

service_triggers() {
    procd_add_reload_trigger "noddos"
}

reload_service() {
    kill -SIGTERM $(cat /var/lib/noddos/noddos.pid)
}

start_service() {
    uci set dhcp.@dnsmasq[0].logqueries="1"
    uci set dhcp.@dnsmasq[0].logdhcp="1"
    uci set dhcp.@dnsmasq[0].logfile="/tmp/dnsmasq.log"
    uci set dhcp.lan.limit='60'
    uci commit dhcp

    netstat -nr | grep '224.0.0' > /dev/null
    if [ "$?" -gt "0" ]; then
        route add -net 224.0.0.0 netmask 240.0.0.0 dev br-lan
    fi

    CONFFILE=/var/etc/noddos.conf
    cp /etc/noddos/noddos.conf-base $CONFFILE
    if [ "$(uci get noddos.@noddos[0].rfc1918)" -eq "1" ]; then
        echo '    "ReportTrafficToRfc1918": true,' >>$CONFFILE
    else
        echo '    "ReportTrafficToRfc1918": false,' >>$CONFFILE
    fi
    if [ $(uci get noddos.@noddos[0].upload) -eq "1" ]; then
        echo '    "TrafficReportInterval": 3600,' >>$CONFFILE
    else
        echo '    "TrafficReportInterval": 0,' >>$CONFFILE
    fi
    echo '    "WhitelistedIpv4Addresses": [' >> $CONFFILE
    firstentry=0
    whitelist=$(uci get noddos.@noddos[0].whitelistipv4 | tr -d "'")
    for ipv4 in $whitelist; do
        if [ "$firstentry" -eq "0" ]; then
            firstentry=1
        else
            echo '        ,' >>$CONFFILE
        fi
        echo '        "'$ipv4'"' >>$CONFFILE
    done
    echo '    ],' >>$CONFFILE

    echo '    "WhitelistedIpv6Addresses": [' >> $CONFFILE
    firstentry=0
    whitelist=$(uci get noddos.@noddos[0].whitelistipv6 | tr -d "'")
    for ipv6 in $whitelist; do
        if [ "$firstentry" -eq "0" ]; then
            firstentry=1
        else
            echo '        ,' >>$CONFFILE
        fi

       echo '        "'$ipv6'"' >>$CONFFILE
    done
    echo '    ],' >>$CONFFILE

    echo '    "WhitelistedMacAddresses": [' >> $CONFFILE
    firstentry=0
    whitelist=$(uci get noddos.@noddos[0].whitelistmac | tr -d "'")
    for mac in $whitelist; do
        if [ "$firstentry" -eq "0" ]; then
            firstentry=1
        else
            echo '        ,' >>$CONFFILE
        fi
        echo '        "'$mac'"' >>$CONFFILE
    done
    echo '    ]' >>$CONFFILE
    echo '}' >>$CONFFILE

    procd_open_instance
    procd_set_param command /usr/sbin/noddos -n -c $CONFFILE

    # respawn automatically if something died, be careful if you have an
    # alternative process supervisor if process dies sooner than
    # respawn_threshold, it is considered crashed and after 5 retries the
    # service is stopped
    procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}

    procd_set_param file /etc/noddos/noddos.conf
    procd_set_param stdout 0 # forward stdout of the command to logd
    procd_set_param stderr 0 # same for stderr
    procd_set_param user root # run service as user nobody
    procd_close_instance
}

savematches_service() {
    kill -SIGUSR1 $(cat /var/lib/noddos/noddos.pid)
}

savedata_service() {
    kill -SIGUSR2 $(cat /var/lib/noddos/noddos.pid)
}
